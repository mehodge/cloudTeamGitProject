{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[toLower(concat(parameters('vmName'),'-', uniqueString(resourceGroup().id, parameters('vmName'))))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIpName": {
    "type": "string",
      "defaultValue": "CA-Stand1-PIP",
      "metadata": {
        "description": "Name for the Public IP used to access the Virtual Machine."
      }
    },
"publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
      "Dynamic",
      "Static"
      ],
      "metadata": {
        "description": "Allocation method for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIpSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "SKU for the Public IP used to access the Virtual Machine."
      }
    },

    "OSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "20h2-ent",
        "20h2-evd",
        "2019-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "allowedValues": [
        "Standard_B1ms",
        "Standard_B1s",
        "Standard_B2ms",
        "Standard_B2s",
        "Standard_B4ms",
        "Standard_B8ms",
        "Standard_D2s_v4",
        "Standard_D4s_v4",
        "Standard_D8s_v4",
        "Standard_D16s_v4",
        "Standard_E2_v4",
        "Standard_E4_v4",
        "Standard_E8_v4",
        "Standard_E16_v4"
      ],
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "CA-Stand1",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "AddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "VNet address prefix"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "DefaultSubnet",
      "metadata": {
        "description": "New subnet Name"
      }
    },
    "subnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Subnet address prefix"
      }
    },
    "virtualNetworkName": {
    "type": "string",
      "defaultValue": "Default-Vnet",
      "metadata": {
        "description": "Name of the virtual network the virtual machine will connect to."
      }
    },
    "networkSecurityGroupName": {
    "type": "string",
      "defaultValue": "Default-NSG",
      "metadata": {
        "description": "Name of the virtual network the virtual machine will connect to."
      }
    },
	"Tags": {
		"type": "object",
        "defaultValue": {
          "Application": "MS Server",
          "DataClassification": "Internal",
          "Environment": "Training",
          "Monitoring": "Off",
          "Owner": "Michael Neal",
          "Vendor": "Mehodge"
        }
    }
  },
  "variables": {
    "storageAccountName": "[concat('bootdiags', uniquestring(resourceGroup().id))]",
    "availabilitySetName": "[concat('AS-',resourceGroup().name)]",
    "nicName": "[concat(parameters('vmName'), '-nic1')]",
    "addressPrefix": "[parameters('AddressPrefix')]",
    "subnetName": "[parameters('subnetName')]",
    "subnetPrefix": "[parameters('subnetAddressPrefix')]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "publicIpName": "[concat(parameters('vmName'),parameters('publicIpName'))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "networkSecurityGroupName": "[parameters('networkSecurityGroupName')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2020-06-01",
      "name": "[variables('availabilitySetName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "properties": {
        "platformFaultDomainCount": "3",
        "platformUpdateDomainCount": "10"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-06-01",
      "name": "[variables('publicIPName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-06-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-06-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-06-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
	    "tags": {
                "Application": "[toLower(parameters('Tags').Application)]",
                "Data Classification": "[toLower(parameters('Tags').DataClassification)]",
                "Environment": "[toLower(parameters('Tags').Environment)]",
                "Monitoring": "[toLower(parameters('Tags').Monitoring)]",
                "Owner": "[toLower(parameters('Tags').Owner)]",
                "Vendor": "[toLower(parameters('Tags').Vendor)]"
            },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-OS')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
            }        
        },
        "networkProfile": {
        "networkInterfaces": [
            {
            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
        ]
        },
        "diagnosticsProfile": {
        "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
        }
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(parameters('publicIPName')).dnsSettings.fqdn]"
    }
  }
}